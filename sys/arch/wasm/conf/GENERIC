# $NetBSD: GENERIC,v 1.24 2023/05/07 12:41:48 skrll Exp $
#
# GENERIC machine description file
#
# This machine description file is used to generate the default NetBSD
# kernel for RV32.  The generic kernel does not include all options,
# subsystems and device drivers, but should be useful for most applications.
#
# The machine description file can be customised for your specific
# machine to reduce the kernel size and improve its performance.
#
# For further information on compiling NetBSD kernels, see the config(8)
# man page.
#
# For further information on hardware support for this architecture, see
# the intro(4) man page.  For further information about kernel options
# for this architecture, see the options(4) man page.  For an explanation
# of each device driver in this file see the section 4 man page for the
# device.

include	"arch/wasm/conf/std.wasm"
#include	"arch/wasm/conf/files.generic"


maxusers 	16		# estimated number of users

options 	FDT
#options 	MULTIPROCESSOR

# Standard system options
options 	FPE		# Floating-point extension support
options 	NTP		# NTP phase/frequency locked loop

options 	KTRACE		# system call tracing via ktrace(1)

# Note: SysV IPC parameters could be changed dynamically, see sysctl(8).
options 	SYSVMSG		# System V-like message queues
options 	SYSVSEM		# System V-like semaphores
options 	SYSVSHM		# System V-like memory sharing

#options 	MODULAR		# new style module(7) framework
#options 	MODULAR_DEFAULT_AUTOLOAD
options 	USERCONF	# userconf(4) support
#options 	PIPE_SOCKETPAIR	# smaller, but slower pipe(2)
options 	SYSCTL_INCLUDE_DESCR	# Include sysctl descriptions in kernel

# Alternate buffer queue strategies for better responsiveness under high
# disk I/O load.
#options 	BUFQ_READPRIO
options 	BUFQ_PRIOCSCAN

# These options enable verbose messages for several subsystems.
# Warning, these may compile large string tables into the kernel!
#options 	USBVERBOSE	# verbose USB device autoconfig messages

#
# Because gcc omits the frame pointer for any -O level, the line below
# is needed to make backtraces in DDB work.
#
#makeoptions 	COPTS="-O2 -fno-omit-frame-pointer"
#makeoptions 	COPY_SYMTAB=1
#options 	DDB		# in-kernel debugger
#options 	DDB_COMMANDONENTER="bt"	# execute command when ddb is entered
#options 	DDB_ONPANIC=1	# see also sysctl(7): `ddb.onpanic'
#options 	DDB_HISTORY_SIZE=512	# enable history editing in DDB
#options 	KGDB		# remote debugger
#options 	KGDB_DEVNAME="\"com\"",KGDB_DEVADDR=0x3f8,KGDB_DEVRATE=9600
#options 	SYSCALL_STATS	# per syscall counts
#options 	SYSCALL_TIMES	# per syscall times
#options 	SYSCALL_TIMES_HASCOUNTER	# use 'broken' rdtsc (soekris)

# Compatibility options
#include 	"conf/compat_netbsd90.config"

# Wedge support
options 	DKWEDGE_AUTODISCOVER	# Automatically add dk(4) instances
options 	DKWEDGE_METHOD_GPT	# Supports GPT partitions as wedges
options 	DKWEDGE_METHOD_BSDLABEL	# Support disklabel entries as wedges
options 	DKWEDGE_METHOD_MBR	# Support MBR partitions as wedges
options 	DKWEDGE_METHOD_APPLE    # Support Apple partitions as wedges
#options 	DKWEDGE_METHOD_RDB	# Support RDB partitions as wedges

# we dont want to add support for the full netbsd stack of file-systems (at least until raw image support is added.)
# therefore we do not include conf/filesystems.config here but rather declare our own stack of file-system(s).
file-system KERNFS
file-system PROCFS
file-system PTYFS
file-system TMPFS
file-system FDESC
file-system EXT2FS

# File system options
#options 	FFS_EI		# FFS Endian Independent support
#options 	FFS_NO_SNAPSHOT	# No FFS snapshot support
#options 	QUOTA		# legacy UFS quotas
#options 	QUOTA2		# new, in-filesystem UFS quotas
#options 	UFS_DIRHASH	# UFS Large Directory Hashing
#options 	WAPBL		# File system journaling support
#options 	EXT2FS_SYSTEM_FLAGS # makes ext2fs file flags (append and
				# immutable) behave as system flags.
#options 	DISKLABEL_EI	# disklabel Endian Independent support
#options 	NFSSERVER	# Network File System server
#options 	NFS_BOOT_DHCP	# Support DHCP NFS root

# Networking options
#options 	GATEWAY		# packet forwarding
#options 	INET		# IP + ICMP + TCP + UDP
#options 	INET6		# IPV6
#options 	IPSEC		# IP security
#options 	IPSEC_DEBUG	# debug for IP security
#options 	MPLS		# MultiProtocol Label Switching (needs mpls)
#options 	MROUTING	# IP multicast routing
#options 	PIM		# Protocol Independent Multicast
#options 	NETATALK	# AppleTalk networking protocols
#options 	PPP_BSDCOMP	# BSD-Compress compression support for PPP
#options 	PPP_DEFLATE	# Deflate compression support for PPP
#options 	PPP_FILTER	# Active filter support for PPP (requires bpf)
#options 	TCP_DEBUG	# Record last TCP_NDEBUG packets with SO_DEBUG

#options 	ALTQ		# Manipulate network interfaces' output queues
#options 	ALTQ_BLUE	# Stochastic Fair Blue
#options 	ALTQ_CBQ	# Class-Based Queueing
#options 	ALTQ_CDNR	# Diffserv Traffic Conditioner
#options 	ALTQ_FIFOQ	# First-In First-Out Queue
#options 	ALTQ_FLOWVALVE	# RED/flow-valve (red-penalty-box)
#options 	ALTQ_HFSC	# Hierarchical Fair Service Curve
#options 	ALTQ_LOCALQ	# Local queueing discipline
#options 	ALTQ_PRIQ	# Priority Queueing
#options 	ALTQ_RED	# Random Early Detection
#options 	ALTQ_RIO	# RED with IN/OUT
#options 	ALTQ_WFQ	# Weighted Fair Queueing

# These options enable verbose messages for several subsystems.
# Warning, these may compile large string tables into the kernel!

# from i386 start

# Kernel root file system and dump configuration.
config		netbsd	root on ? type ?

#
# wscons options
#
# builtin terminal emulations

options 	WSEMUL_VT100		# VT100 / VT220 emulation
# customization of console and kernel output - see dev/wscons/wsdisplayvar.h

options 	WS_KERNEL_FG=WSCOL_GREEN

# customization of console border color
# compatibility to other console drivers
options 	WSDISPLAY_COMPAT_PCVT		# emulate some ioctls
options 	WSDISPLAY_COMPAT_SYSCONS	# emulate some ioctls
options 	WSDISPLAY_COMPAT_USL		# wsconscfg VT handling
options 	WSDISPLAY_COMPAT_RAWKBD		# can get raw scancodes
# see dev/pckbport/wskbdmap_mfii.c for implemented layouts
# allocate a number of virtual screens at autoconfiguration time

# use a large software cursor that doesn't blink
options 	PCDISPLAY_SOFTCURSOR

#
# Device configuration
#
# Basic Bus Support

# PCI bus support
# PCI bridges
					# SpeedStep support

# XXX 'puc's aren't really bridges, but there's no better place for them here
# EISA bus support

# ISA bus support
isa0	at mainbus?
# PCMCIA bus support
pcmcia* at pcic? controller ? socket ?

# ISA PCMCIA controllers
pcic0	at isa? port 0x3e0 iomem 0xd0000 iosiz 0x4000
pcic1	at isa? port 0x3e2 iomem 0xd4000 iosiz 0x4000

# ISA Plug-and-Play bus support
# ISA Plug-and-Play PCMCIA controllers
# Console Devices

# wscons
pckbc0		at isa?			# PC keyboard controller
pckbd*		at pckbc?		# PC keyboard

vga0		at isa?

pcdisplay0	at isa?			# CGA, MDA, EGA, HGA
wsdisplay*	at vga? console ?
wsdisplay*	at pcdisplay? console ?
wskbd*		at pckbd? console ?

# Serial Devices

# PCI serial interfaces

# ISA Plug-and-Play serial interfaces
# PCMCIA serial interfaces
com*	at pcmcia? function ?		# Modems and serial cards

# ISA serial interfaces

com0	at isa? port 0x3f8 irq 4	# Standard PC serial ports
com1	at isa? port 0x2f8 irq 3
com2	at isa? port 0x3e8 irq 5
# Parallel Printer Interfaces

# PCI parallel printer interfaces
# ISA parallel printer interfaces
lpt0	at isa? port 0x378 irq 7	# standard PC parallel ports
# SCSI Controllers and Devices

# PCI SCSI controllers
# EISA SCSI controllers
# PCMCIA SCSI controllers
# ISA Plug-and-Play SCSI controllers
# ISA SCSI controllers
# SCSI bus support
# SCSI devices
# IDE and related devices

# ISA Plug-and-Play IDE controllers
# PCMCIA IDE controllers
wdc*	at pcmcia? function ?

# ISA IDE controllers
wdc0	at isa? port 0x1f0 irq 14	# ST506, ESDI, and IDE controllers
wdc1	at isa? port 0x170 irq 15

# ATA (IDE) bus support
atabus* at ata?
# IDE drives
wd*	at atabus? drive ?			# the drives themselves

# ATAPI bus support
atapibus* at atapi?

# ATAPI devices
cd*	at atapibus? drive ?		# ATAPI CD-ROM drives
sd*	at atapibus? drive ?		# ATAPI disk drives
# Miscellaneous mass storage devices

# ISA floppy
fdc0	at isa? port 0x3f0 irq 6 drq 2	# standard PC floppy controllers

fd*	at fdc? drive ?			# the drives themselves
# some machines need you to do this instead of fd*
# ISA CD-ROM devices
# ISA tape devices
# note: the wt driver conflicts unpleasantly with SMC boards at the
# same I/O address. The probe reprograms their EEPROMs. Don't
# uncomment it unless you are actually using it.

# Network Interfaces

# MII bus support
# MII PHY network interfaces

# USB Controller and Devices

# PCI USB controllers

# USB bus support

# USB Hubs

# USB Mice
# USB Keyboards
# USB Generic HID devices
# USB Printer
# USB Mass Storage
# USB Ethernet adapters
# USB Generic driver
# Audio Devices

# PCI audio devices
# ISA Plug-and-Play audio devices
# ISA audio devices
# Audio support
# The spkr driver provides a simple tone interface to the built in speaker.

# Joysticks

# ISA Plug-and-Play joysticks
# ISA joysticks. Probe is a little strange; add only if you have one.
# Pseudo-Devices

# disk/mass storage pseudo-devices

pseudo-device	fss			# file system snapshot device

pseudo-device	vnd			# disk-like interface to files
# network pseudo-devices
#pseudo-device	bpfilter		# Berkeley packet filter
#pseudo-device	bridge			# simple inter-network bridging

#pseudo-device	npf			# NPF packet filter
#pseudo-device	loop			# network loopback
#pseudo-device	ppp			# Point-to-Point Protocol
#pseudo-device	pppoe			# PPP over Ethernet (RFC 2516)

#pseudo-device	tun				# network tunneling over tty
# miscellaneous pseudo-devices
pseudo-device	pty				# pseudo-terminals

pseudo-device	clockctl		# user control of clock subsystem

# wscons pseudo-devices
pseudo-device	wsmux			# mouse & keyboard multiplexor


# from i386 end

options 	PAX_MPROTECT=0		# PaX mprotect(2) restrictions
options 	PAX_ASLR=0		# PaX Address Space Layout Randomization

# Pull in optional local configuration - always at end
cinclude 	"arch/wasm/conf/GENERIC.local"

#options 	EARLYCONS=com, CONSADDR=0x10000000	# qemu virt
options 	VERBOSE_INIT_WASM32

# Diagnostic/debugging support options
#options 	DIAGNOSTIC	# inexpensive kernel consistency checks
				# XXX to be commented out on release branch
#options 	DEBUG		# expensive debugging checks/support
#options 	LOCKDEBUG	# expensive locking checks/support
#options 	KERNHIST
#options 	KERNHIST_PRINT
#options 	UVMHIST
#options 	UVMHIST_PRINT
#options 	PMAPHIST
#options 	PMAPHIST_PRINT
#options 	SYSCTL_DEBUG
#options 	SYSCTL_DEBUG_SETUP
#options 	SYSCTL_DEBUG_CREATE
#options 	PMAP_FAULTINFO
#options 	RISCV_SYSCALL_DEBUG
#options 	SYSCALL_DEBUG


# Pull in optional local configuration - always at end
cinclude 	"arch/wasm/conf/GENERIC.local"
